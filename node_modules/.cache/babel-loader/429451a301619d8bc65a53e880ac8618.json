{"ast":null,"code":"var _jsxFileName = \"/Users/soudehschl/Development/React-Project-Punk-API/src/App.jsx\";\n// import { useState , useEffect} from \"react\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport beers from \"./data/beers.js\";\nimport BeerCards from \"./components/CardList/CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const beersArray = beers.map(beer => beer.name);\n  const beersDescriptionArray = beers.map(beer => beer.description);\n  console.log(beersArray);\n  const beersDetails = [{\n    beersArray\n  }, {\n    beersDescriptionArray\n  }];\n  console.log(beersDetails); //     //DEFAULT ?? [], NULL\n  //     // [STATE,FUNCTION TO UPDATE IT]\n  //     const [users, setUsers] = useState([]);\n  //     const [numbersOfUsers,setNumbersOfUsers]= useState(5);\n  //      const [genderOfUsers, setGenderOfUsers] = useState(\"all\");\n  //     //USEEFFECT-> 2 aRGUMENTS\n  //   // FUNCTION-> THE CODE TO RUN\n  //   // -DEPENDECY ARRAY-> WHEN TO RUN IT\n  //   //--MOUNTING /COMPONENT LOADS = EMPTY DEP ARRAY\n  //   //--UPDATING / CHANGES =ADDING THE DEPENDECY TO THE [numbersOfUsers]\n  //     useEffect(() => {\n  //   //get the users on the page\n  //     getUsers(numbersOfUsers,genderOfUsers);\n  //     },[numbersOfUsers,genderOfUsers]);\n  //     //URL ENDPOINT-> WE WILL SEND REQUEST TO\n  //     //QUERY PARAM-> ?RESULTS=5\n  //     //\"\"https://randomuser.me/api/results=\"+numbersOfUsers\"\n  //     const url = \"https://randomuser.me/api/\"\n  //     // WRITE A FUNCTION THAT SEND THE REQUEST-> ASYNC\n  //     // -ASYNC-> WRITE A FUNCTION THAT DOENST STOP THE CODE\n  //     //- AWAIT -> WHICH ALLOWS US TO WAIT FOR A RESPONSE SO WE CAN DO SOMETHING WITH IT\n  //     // FETCH-> IS HOW WE SEND REQUESTS\n  //     const getUsers = async (resultNumber,genderSelector) => {\n  //       let urlParam= url +\"?results=\" + resultNumber;\n  //       if (genderSelector!=\"all\") {\n  //         urlParam +=\"&gender=\"+genderSelector;\n  //       }\n  //       // const response = await fetch(url + \"?results=\" + resultNumber);\n  //       //we get a response -> turn it into json -> json takes time we want to wait for IT TO COMPLETE\n  //       const response = await fetch(urlParam);\n  //       const data = await response.json();\n  //       setUsers(data.results);\n  //     };\n  //     const handleInputChange = (event) => {\n  //       setNumbersOfUsers(event.target.value);\n  //     };\n  //     const handleClick = (event) => {\n  //       setGenderOfUsers(event.target.value)\n  //     }\n  //     // CHECK IF WE HAVE USER 1ST\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"\",\n        children: Card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true); //       <div className=\"app\">\n  //         <h1>Random User Generator</h1>\n  //         <Button label=\"Get random User\" onClick={getUsers}></Button>\n  //         <RangeInput\n  //         label={\"Number of users: \"} \n  //         value={numbersOfUsers} \n  //         id={\"user-range\"} \n  //         onChange={handleInputChange} >\n  //         </RangeInput>\n  //         <RadioButtons \n  //         onClick= {handleClick} \n  //         options={[\"All\",\"Female\",\"Male\"]}\n  //          caption={\"Select Gender\"} ></RadioButtons>\n  //         {users.length>0 && (\n  //         // <ProfileCard \n  //         // name={users[0].name.first+ \" \" +users[0].name.last}\n  //         //  image={users[0].picture.large} email={users[0].email} \n  //         //  phoneNumber={users[0].phone}></ProfileCard>)}\n  //         <ProfileContainer cards={users}></ProfileContainer>\n  //         )}\n  //         </div>\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","beers","BeerCards","App","beersArray","map","beer","name","beersDescriptionArray","description","console","log","beersDetails","Card"],"sources":["/Users/soudehschl/Development/React-Project-Punk-API/src/App.jsx"],"sourcesContent":["// import { useState , useEffect} from \"react\";\nimport React from \"react\";\nimport\"./App.scss\";\nimport beers from \"./data/beers.js\"\nimport BeerCards from \"./components/CardList/CardList\";\n\n\n\n\nconst App = () => {\n    const beersArray = beers.map((beer) => beer.name);\n  const beersDescriptionArray = beers.map((beer) => beer.description);\nconsole.log(beersArray)\n  const beersDetails = [{ beersArray }, { beersDescriptionArray }];\n  console.log(beersDetails);\n//     //DEFAULT ?? [], NULL\n//     // [STATE,FUNCTION TO UPDATE IT]\n//     const [users, setUsers] = useState([]);\n//     const [numbersOfUsers,setNumbersOfUsers]= useState(5);\n//      const [genderOfUsers, setGenderOfUsers] = useState(\"all\");\n//     //USEEFFECT-> 2 aRGUMENTS\n//   // FUNCTION-> THE CODE TO RUN\n//   // -DEPENDECY ARRAY-> WHEN TO RUN IT\n//   //--MOUNTING /COMPONENT LOADS = EMPTY DEP ARRAY\n//   //--UPDATING / CHANGES =ADDING THE DEPENDECY TO THE [numbersOfUsers]\n  \n//     useEffect(() => {\n     \n//   //get the users on the page\n//     getUsers(numbersOfUsers,genderOfUsers);\n//     },[numbersOfUsers,genderOfUsers]);\n  \n//     //URL ENDPOINT-> WE WILL SEND REQUEST TO\n//     //QUERY PARAM-> ?RESULTS=5\n//     //\"\"https://randomuser.me/api/results=\"+numbersOfUsers\"\n  \n//     const url = \"https://randomuser.me/api/\"\n  \n//     // WRITE A FUNCTION THAT SEND THE REQUEST-> ASYNC\n//     // -ASYNC-> WRITE A FUNCTION THAT DOENST STOP THE CODE\n//     //- AWAIT -> WHICH ALLOWS US TO WAIT FOR A RESPONSE SO WE CAN DO SOMETHING WITH IT\n//     // FETCH-> IS HOW WE SEND REQUESTS\n  \n//     const getUsers = async (resultNumber,genderSelector) => {\n//       let urlParam= url +\"?results=\" + resultNumber;\n//       if (genderSelector!=\"all\") {\n//         urlParam +=\"&gender=\"+genderSelector;\n//       }\n//       // const response = await fetch(url + \"?results=\" + resultNumber);\n      \n//       //we get a response -> turn it into json -> json takes time we want to wait for IT TO COMPLETE\n//       const response = await fetch(urlParam);\n//       const data = await response.json();\n  \n//       setUsers(data.results);\n//     };\n//     const handleInputChange = (event) => {\n//       setNumbersOfUsers(event.target.value);\n//     };\n//     const handleClick = (event) => {\n//       setGenderOfUsers(event.target.value)\n       \n//     }\n//     // CHECK IF WE HAVE USER 1ST\n    return (\n    <> \n    <div className=\"app\">\n       <section className=\"\">{Card}\n           </section>\n           </div> </>\n    );\n//       <div className=\"app\">\n//         <h1>Random User Generator</h1>\n//         <Button label=\"Get random User\" onClick={getUsers}></Button>\n//         <RangeInput\n//         label={\"Number of users: \"} \n//         value={numbersOfUsers} \n//         id={\"user-range\"} \n//         onChange={handleInputChange} >\n  \n//         </RangeInput>\n//         <RadioButtons \n//         onClick= {handleClick} \n//         options={[\"All\",\"Female\",\"Male\"]}\n//          caption={\"Select Gender\"} ></RadioButtons>\n//         {users.length>0 && (\n//         // <ProfileCard \n//         // name={users[0].name.first+ \" \" +users[0].name.last}\n//         //  image={users[0].picture.large} email={users[0].email} \n//         //  phoneNumber={users[0].phone}></ProfileCard>)}\n//         <ProfileContainer cards={users}></ProfileContainer>\n//         )}\n//         </div>\n \n    \n   };\n  \n  export default App;\n  "],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAM,YAAN;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;;;AAKA,MAAMC,GAAG,GAAG,MAAM;EACd,MAAMC,UAAU,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,IAAzB,CAAnB;EACF,MAAMC,qBAAqB,GAAGP,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACG,WAAzB,CAA9B;EACFC,OAAO,CAACC,GAAR,CAAYP,UAAZ;EACE,MAAMQ,YAAY,GAAG,CAAC;IAAER;EAAF,CAAD,EAAiB;IAAEI;EAAF,CAAjB,CAArB;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ,EALgB,CAMlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EACI,oBACA;IAAA,wBACA;MAAK,SAAS,EAAC,KAAf;MAAA,uBACG;QAAS,SAAS,EAAC,EAAnB;QAAA,UAAuBC;MAAvB;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QADA;EAAA,gBADA,CAvDc,CA8DlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGI,CAtFJ;;KAAMV,G;AAwFJ,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}