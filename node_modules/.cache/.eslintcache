[{"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\index.js":"1","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\reportWebVitals.js":"2","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\App.jsx":"3","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\data\\beers.js":"4","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\CardList\\CardList.jsx":"5","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\SearchBox\\SearchBox.jsx":"6","C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\Button\\ButtonOptions.jsx":"7"},{"size":552,"mtime":1652905682450,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1652905682453,"results":"10","hashOfConfig":"9"},{"size":3256,"mtime":1653248961257,"results":"11","hashOfConfig":"9"},{"size":23961,"mtime":1652905682447,"results":"12","hashOfConfig":"9"},{"size":419,"mtime":1653250313258,"results":"13","hashOfConfig":"9"},{"size":387,"mtime":1653170401687,"results":"14","hashOfConfig":"9"},{"size":650,"mtime":1653174270415,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2qpuyf",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\index.js",[],[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\reportWebVitals.js",[],[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\App.jsx",["39","40"],[],"// import { useState , useEffect} from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport CardList from \"./components/CardList/CardList\";\r\n\r\nimport beers from \"./data/beers.js\";\r\n\r\nimport SearchBox from \"./components/SearchBox/SearchBox\";\r\n// import Button from \"./components/Button/ButtonOptions\";\r\nimport ButtonOptions from \"./components/Button/ButtonOptions\";\r\n// import ExploreBeers from \"./components/ExploreBeers/ExploreBeers\";\r\n\r\nconst App = () => {\r\n  const [beers, setBeers] = useState([]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [selectedBeers, setSelectedBeers] = useState(\"all\");\r\n  const getBeers = async (beerName, filters) => {\r\n    let url = \"https://api.punkapi.com/v2/beers\";\r\n    if (beerName !== \"\") url += `?beer_name=${beerName}`;\r\n    // IT CAN USE IT TO SEE IF IT HAS AN ID\r\n    // IF IT DOES IT WILL ADD THE CORRECT QUERY PARAM TO THE URL\r\n    if (filters.includes(\"High ABV (> 6.0%)\")) {\r\n      // CHECK IF WE NEED TO USE & OR ?\r\n      // & IS WHEN YOU HAVE MULTIPLE PARAMS -> SEARCH AND ABV\r\n      // ? IS WHEN YOU HAVE ONE -> ABV\r\n      url += beerName ? \"&abv_gt=6\" : \"?abv_gt=6\";\r\n    }\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    setBeers(data);\r\n  };\r\n  // IN THE USE EFFECT WE GIVE IT THE FILTER BY STATE IT NOW NEEDS\r\n  useEffect(() => {\r\n    getBeers(searchTerm, selectedBeers);\r\n  }, [searchTerm, selectedBeers]);\r\n  const getBeersByName = async name => {\r\n    // getting Beers by name\r\n    const url = `https://api.punkapi.com/v2/beers?beer_name=${name}`;\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setBeers(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm !== \"\") getBeersByName(searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  //getting beers  by using the first filter\r\n  const getBeersByFilter = async () => {\r\n    const url = \"https://api.punkapi.com/v2/beers?abv_gt\";\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setBeers(data);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     if (selectedBeers === \"High ABV (> 6.0%)\") getBeersByFilter(selectedBeers);\r\n  //   }, [selectedBeers]);\r\n\r\n  const handleInput = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleClick = event => {\r\n    if (selectedBeers.includes(event.target.id)) {\r\n      setSelectedBeers(selectedBeers.replace(event.target.id, \"\"));\r\n    } else {\r\n      setSelectedBeers(selectedBeers + event.target.id);\r\n    }\r\n  };\r\n\r\n  const cardListJSX = beers.map(list => {\r\n    return <CardList name={list.name} imgURL={list.image_url} description={list.description}></CardList>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <div className=\"all-content\">\r\n          <section className=\"navBar_container\">\r\n            <SearchBox searchTerm={searchTerm} handleInput={handleInput}></SearchBox>\r\n\r\n            <div className=\"nav-menu__Button\">\r\n              <ButtonOptions onClick={handleClick} selected={selectedBeers}></ButtonOptions>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"Container\">{cardListJSX}</section>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  //\r\n};\r\n\r\nexport default App;\r\n",[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\data\\beers.js",[],[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\CardList\\CardList.jsx",["41"],[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\SearchBox\\SearchBox.jsx",[],[],"C:\\Users\\charlie.richardson\\development\\coaching\\feedback\\soudeh\\src\\components\\Button\\ButtonOptions.jsx",[],[],{"ruleId":"42","severity":1,"message":"43","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":54,"column":9,"nodeType":"44","messageId":"45","endLine":54,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":9,"column":7,"nodeType":"49","endLine":9,"endColumn":61},"no-unused-vars","'beers' is defined but never used.","Identifier","unusedVar","'getBeersByFilter' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]